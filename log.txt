0>>>HTIF is available!
0>>>(Emulated) memory size: 2048 MB
0>>>In m_start, hartid:0
hartid = 0: Enter supervisor mode...
0>>>PKE kernel start 0x0000000080000000, PKE kernel end: 0x0000000080018000, PKE kernel size: 0x0000000000018000 .
0>>>free physical memory address: [0x0000000080018000, 0x0000000087ffffff] 
0>>>kernel memory manager is initializing ...
1>>>In m_start, hartid:1
hartid = 1: Enter supervisor mode...
0>>>KERN_BASE 0x0000000080000000
0>>>physical address of _etext is: 0x000000008000d000
0>>>RAMDISK0: base address of RAMDISK0 is: 0x00000000801ef000
0>>>RFS: format RAMDISK0 done!
0>>>free>>>0x0000000080274000
0>>>vfs_mkdir: the directory already exists!
0>>>free>>>0x0000000080286000
0>>>free>>>0x000000008028a000
0>>>free>>>0x0000000080284000
0>>>free>>>0x0000000080284000
0>>>kernel page table is on 
0>>>Switch to user mode...

0====================== Start ======================

1>>>free>>>0x0000000080293000
1>>>free>>>0x000000008029a000
1>>>free>>>0x0000000080285000
1>>>free>>>0x0000000080285000
1>>>kernel page table is on 
1>>>Switch to user mode...

1====================== Start ======================

0>>>in alloc_proc. user frame 0x000000008028c000, user stack 0x000000007ffff000, user kstack 0x000000008028f000 
0>>>FS: created a file management struct for a process.
0>>>in alloc_proc. build proc_file_management successfully.
0>>>User application is loading.
0>>>Application: /app/app_sem
0>>>ph_addr:type:1879048195 va:0x0000000000000000 va_end:0x0000000000000000 size: 0
0>>>ph_addr:type:1 va:0x0000000000010000 va_end:0x000000000001104c size: 4172
0>>>alloc_page
1>>>in alloc_proc. user frame 0x000000008029a000, user stack 0x000000007ffff000, user kstack 0x000000008029d000 
1>>>FS: created a file management struct for a process.
1>>>in alloc_proc. build proc_file_management successfully.
1>>>User application is loading.
1>>>Application: /app/app_cow
1>>>ph_addr:type:1879048195 va:0x0000000000000000 va_end:0x0000000000000000 size: 0
1>>>ph_addr:type:1 va:0x0000000000010000 va_end:0x000000000001105c size: 4188
1>>>alloc_page
0>>>alloc_page
0>>>CODE_SEGMENT added at mapped info offset:4 pages:2
0>>>ph_addr:type:1 va:0x0000000000012050 va_end:0x0000000000012068 size: 24
0>>>alloc_page
0>>>DATA_SEGMENT added at mapped info offset:5 va:0x0000000000012000 npages:1
1>>>alloc_page
1>>>CODE_SEGMENT added at mapped info offset:4 pages:2
1>>>ph_addr:type:1 va:0x0000000000012060 va_end:0x0000000000012078 size: 24
1>>>alloc_page
1>>>DATA_SEGMENT added at mapped info offset:5 va:0x0000000000012000 npages:1
0>>>free>>>0x00000000802ae000
0>>>free>>>0x00000000802a9000
0>>>free>>>0x00000000802ac000
0>>>free>>>0x00000000802aa000
0>>>Application program entry point (virtual address): 0x00000000000100e8
0>>>0get process0
0>>>going to insert process 0 to ready queue.
0>>>0x0000000080009000:0xb0238faa14051573 satp:0x8000000000080021
0>>>going to schedule process 0 to run.
0>>>return_to_user0x00000000800090a0
1>>>free>>>0x00000000802b9000
1>>>free>>>0x00000000802b4000
1>>>free>>>0x00000000802b7000
1>>>free>>>0x00000000802b5000
1>>>Application program entry point (virtual address): 0x00000000000100e8
1>>>1get process1
1>>>going to insert process 1 to ready queue.
1>>>0x0000000080009000:0xb0238faa14051573 satp:0x8000000000080021
1>>>going to schedule process 1 to run.
1>>>return_to_user0x00000000800090a0
1>>>Ticks 0
1>>>return_to_user0x00000000800090a0
1>>>return_to_user0x00000000800090a0
the physical address of parent process heap is: 1>>>return_to_user0x00000000800090a0
00000000802ac000
1>>>return_to_user0x00000000800090a0
1>>>User call fork.
1>>>DATA: va 0x0000000000012000 npages 1
1>>>will fork a child from parent 1.
1>>>in alloc_proc. user frame 0x00000000802b4000, user stack 0x000000007ffff000, user kstack 0x00000000802b8000 
1>>>FS: created a file management struct for a process.
1>>>in alloc_proc. build proc_file_management successfully.
1>>>do_fork map code segment at pa:00000000802bb000 of parent to child at va:0000000000010000.
1>>>DATA: va 0x0000000000012000 npages 1
1>>>do_fork map data segment at pa:00000000802c8000 of parent to child at va:0000000000012000.
1>>>going to insert process 2 to ready queue.
1>>>return_to_user0x00000000800090a0
1>>>Ticks 1
1>>>going to insert process 1 to ready queue.
1>>>going to schedule process 2 to run.
1>>>return_to_user0x00000000800090a0
the physical address of child process heap before copy on write is: 1>>>return_to_user0x00000000800090a0
1>>>Ticks 2
1>>>return_to_user0x00000000800090a0
00000000802ac000
1>>>return_to_user0x00000000800090a0
1>>>handle_page_fault: 0000000000400000
1>>>page_pa:0x00000000802dc000
1>>>return_to_user0x00000000800090a0
the physical address of child process heap after copy on write is: 1>>>return_to_user0x00000000800090a0
00000000802dc000
1>>>return_to_user0x00000000800090a0
1>>>Ticks 3
1>>>going to insert process 2 to ready queue.
1>>>going to schedule process 1 to run.
1>>>return_to_user0x00000000800090a0
1>>>User pid:1 exit with code:0.
1>>>going to schedule process 2 to run.
1>>>return_to_user0x00000000800090a0
1>>>User pid:2 exit with code:0.
1>>>ready queue empty, but process 0 is not in free/zombie state:2
